{"version":3,"sources":["AppContext.js","components/Nav/Nav.js","config.js","components/AddList/AddList.js","components/Sidebar/Sidebar.js","components/AddCity/AddCity.js","components/CurrentWeather/CurrentWeather.js","components/Item/Item.js","components/WeatherDisplay/WeatherDisplay.js","components/ListPage/ListPage.js","components/Home/Home.js","components/Landing/Landing.js","components/Registration/Registration.js","App.js","index.js"],"names":["AppContext","React","createContext","lists","cities","onAddCity","onDeleteCity","onAddList","onDeleteList","onSignOut","Nav","className","to","onClick","this","context","Component","contextType","config","API_ENDPOINT","API_KEY","process","AddList","addList","name","fetch","method","headers","body","JSON","stringify","then","res","json","data","catch","error","console","log","onSubmit","e","preventDefault","target","inputList","value","htmlFor","type","placeholder","id","required","Sidebar","handleDelete","listId","ok","Promise","reject","map","list","i","AddCity","newCity","search","list_id","CurrentWeather","props","stamp","wData","length","Math","round","main","temp","weather","description","sys","sunset","Intl","DateTimeFormat","timeStyle","timeZone","format","Date","Item","state","city","getNameOnClick","itemId","setState","WeatherDisplay","newDate","weekDay","dt","setTime","moment","ListPage","forecastData","weatherData","componentDidUpdate","prevProps","prevState","fetchWeather","api_key","imperial","forecastUrl","weatherUrl","all","forecastRes","weatherRes","forecast","filter","fData","dt_txt","includes","err","message","formatForecast","cityName","Home","match","params","item","parseInt","Landing","username","password","isError","onUserChange","onPassChange","handleLogin","authedUser","onChange","Registration","repeatPassword","isSuccess","onUsernameChange","onPasswordChange","onRepeatPasswordChange","handleRegistration","users","App","response","componentDidMount","url","listsObj","citiesObj","handleDeleteList","newList","itm","handleAddList","listName","handleDeleteCity","cityId","newCities","handleAddCity","user","find","toLowerCase","handleSignOut","newUsers","Provider","path","render","routeProps","ReactDOM","document","getElementById"],"mappings":"gbAYeA,EAVIC,IAAMC,cAAc,CACrCC,MAAO,GACPC,OAAQ,GACRC,UAAW,aACXC,aAAc,aACdC,UAAW,aACXC,aAAc,aACdC,UAAW,eCJPC,G,6KAKF,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,IAAD,CAAMC,GAAG,QAAT,kBAGE,mBAAGC,QAAUC,KAAKC,QAAQN,UAA1B,6B,GAVQO,cAAZN,EAEGO,YAAcjB,EAeRU,QCjBAQ,EALA,CACbC,aAAa,4CACbC,QAASC,oCCGLC,G,kNAIJC,QAAU,SAAAC,GACRC,MAAM,GAAD,OAAMP,EAAOC,aAAb,cAAwC,CAC3CO,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEN,WAExBO,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAM,SAAAG,GACL,EAAKnB,QAAQR,UAAW2B,MAEzBC,OAAO,SAAAC,GAAWC,QAAQC,IAAKF,O,EAGlCG,SAAW,SAAAC,GACTA,EAAEC,iBACF,EAAKlB,QAASiB,EAAEE,OAAOC,UAAUC,Q,uDAIjC,OACE,qBAAKjC,UAAU,UAAf,SACE,uBAAMA,UAAU,eAAe4B,SAAWzB,KAAKyB,SAA/C,UACE,uBAAOM,QAAQ,cACf,uBAAOC,KAAK,OAAOC,YAAY,kBAAkBvB,KAAK,YAAYwB,GAAG,YAAYC,UAAQ,IACzF,wBACEH,KAAK,SADP,+B,GA9BY9B,cAAhBM,EAEGL,YAAcjB,EAqCRsB,QCrCT4B,G,kNAIJC,aAAe,SAAEC,GACf3B,MAAM,GAAD,OAAMP,EAAOC,aAAb,sBAAyCiC,GAAW,CACvD1B,OAAQ,SACRC,QAAS,CACP,eAAgB,sBAGnBI,MAAM,SAAAC,GACL,OAAKA,EAAIqB,GAGFrB,EAFEA,EAAIC,OAAOF,MAAM,SAAAS,GAAC,OAAIc,QAAQC,OAAQf,SAIhDT,MAAM,WACL,EAAKhB,QAAQP,aAAc4C,MAE5BjB,OAAO,SAAAC,GACNC,QAAQC,IAAKF,O,uDAIP,IAAD,OAEP,OACE,sBAAKzB,UAAU,UAAf,UACE,+EACA,6BACIG,KAAKC,QAAQZ,MAAMqD,KAAK,SAAEC,EAAMC,GAAR,OACxB,+BACE,cAAC,IAAD,CAAS9C,GAAE,iBAAc6C,EAAKT,IAA9B,SACES,EAAKjC,OAEL,wBACAb,UAAU,MACVmC,KAAK,SACLjC,QAAU,kBAAM,EAAKsC,aAAcM,EAAKT,KAHxC,iBAJMU,QAYhB,cAAC,EAAD,W,GA5CgB1C,cAAhBkC,EAEGjC,YAAcjB,EAgDRkD,QCrDTS,E,4MAIJpB,SAAW,SAAAC,GACTA,EAAEC,iBACF,IAAMmB,EAAU,CACdpC,KAAMgB,EAAEE,OAAOmB,OAAOjB,MACtBkB,QAAStB,EAAEE,OAAOU,OAAOR,OAE3BnB,MAAM,GAAD,OAAMP,EAAOC,aAAb,eAAyC,CAC5CO,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAW8B,KAEvB7B,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAM,SAAAG,GACL,EAAKnB,QAAQV,UAAW6B,MAEzBC,OAAO,SAAAC,GAAWC,QAAQC,IAAKF,O,uDAIhC,OACE,qBAAKzB,UAAU,UAAf,SACE,uBAAMA,UAAU,eAAe4B,SAAWzB,KAAKyB,SAA/C,UACE,wDACA,uBAAOM,QAAQ,WACf,uBAAOC,KAAK,OAAOC,YAAY,aAAavB,KAAK,SAASwB,GAAG,SAASC,UAAQ,IAE9E,uBAAOJ,QAAQ,KACf,wBAAQG,GAAG,SAASxB,KAAK,SAAzB,SACIV,KAAKC,QAAQZ,MAAMqD,KAAK,SAAEC,EAAMC,GAAR,OACxB,wBAEEd,MAAQa,EAAKT,GAFf,SAGGS,EAAKjC,MAFAkC,QAKV,wBACEZ,KAAK,SADP,+B,GAzCU9B,aAAhB2C,EAEG1C,YAAcjB,EAgDR2D,Q,MC1BAI,MAzBf,SAAyBC,GAEvB,IAAiBC,EAQjB,OACE,sBAAKtD,UAAU,kBAAf,UACE,6BAAMqD,EAAME,MAAM1C,OACO,IAAvBwC,EAAME,MAAMC,OACR,gCACE,+BAAMC,KAAKC,MAAOL,EAAME,MAAMI,KAAKC,MAAnC,WACA,4BAAKP,EAAME,MAAMM,QAAQ,GAAGC,cAC5B,2CAfKR,EAeiBD,EAAME,MAAMQ,IAAIC,OAd7B,IAAIC,KAAKC,eAAgB,QAAS,CACnDC,UAAW,SACXC,SAAU,QAEMC,OAAQ,IAAIC,KAAc,IAARhB,WAY5B,OClBNiB,E,4MAIJC,MAAQ,CACNC,KAAM,I,EAGRvE,QAAU,WACR,EAAKmD,MAAMqB,eAAgB,EAAKrB,MAAMoB,KAAK5D,O,EAG7C2B,aAAe,SAAEH,GACf,IAAMsC,EAAStC,EACfvB,MAAM,GAAD,OAAMP,EAAOC,aAAb,uBAA0CmE,GAAW,CACxD5D,OAAQ,SACRC,QAAS,CACP,eAAgB,sBAGnBI,MAAM,SAAAC,GACL,OAAKA,EAAIqB,GAGFrB,EAFEA,EAAIC,OAAOF,MAAM,SAAAS,GAAC,OAAIc,QAAQC,OAAQf,SAIhDT,MAAM,SAAEqD,GACP,EAAKrE,QAAQT,aAAcgF,GAC3B,EAAKC,SAAS,CACZH,YAGHjD,OAAO,SAAAC,GACNC,QAAQC,IAAKF,O,uDAIP,IAAD,OAEP,OACE,qBAAKzB,UAAU,OAAf,SACI,sBACEA,UAAU,YACVE,QAAU,SAAA2B,GAAC,OAAI,EAAK3B,QAAS2B,IAF/B,UAIM1B,KAAKkD,MAAMoB,KAAK5D,KACpB,wBACEb,UAAU,MACVmC,KAAK,SACLjC,QAAU,kBAAM,EAAKsC,aAAc,EAAKa,MAAMoB,KAAKpC,KAHrD,wB,GA9COhC,aAAbkE,EAEGjE,YAAcjB,EAwDRkF,Q,iBCpCAM,G,6KAlBX,IAAMC,EAAU,IAAIR,KACdS,EAA+B,IAArB5E,KAAKkD,MAAM9B,KAAKyD,GAGhC,OAFAF,EAAQG,QAASF,GAGf,sBAAK/E,UAAU,kBAAf,UACE,qBAAKA,UAAU,0BAAf,SACIkF,IAAQJ,GAAUT,OAAQ,UAE9B,qBAAKrE,UAAU,8BAAf,SACIG,KAAKkD,MAAM9B,KAAKsC,QAAQ,GAAGC,cAE/B,+BAAML,KAAKC,MAAOvD,KAAKkD,MAAM9B,KAAKoC,KAAKC,MAAvC,kB,GAhBqBvD,cCIvB8E,G,kNAIJX,MAAQ,CACNY,aAAc,GACdC,YAAa,GACbZ,KAAM,I,EAGRa,mBAAqB,SAAEC,EAAWC,GAC5BA,EAAUf,OAAS,EAAKD,MAAMC,MAC/B,EAAKgB,aAAc,EAAKjB,MAAMC,O,EAInCgB,aAAe,WACb,IAAMhB,EAAoB,EAAKD,MAAMC,KAG/BiB,EAAO,UAAOnF,EAAOE,SACrBkF,EAAQ,kBACRC,EAAW,UAJC,uDAID,OAAwBnB,EAAxB,kBAAwCiB,GAAxC,OAAoDC,GAC/DE,EAAU,UAJC,sDAID,OAAuBpB,EAAvB,kBAAuCiB,GAAvC,OAAmDC,GAEnEhD,QAAQmD,IAAI,CACVhF,MAAO8E,GACP9E,MAAO+E,KAERzE,MAAM,YAAkC,IAAD,mBAA9B2E,EAA8B,KAAjBC,EAAiB,KACtC,OAAKD,EAAYrD,GAGZsD,EAAWtD,GAGTC,QAAQmD,IAAI,CAAEC,EAAYzE,OAAQ0E,EAAW1E,SAF3C0E,EAAW1E,OAAOF,MAAM,SAAAS,GAAC,OAAIc,QAAQC,OAAQf,MAH7CkE,EAAYzE,OAAOF,MAAM,SAAAS,GAAC,OAAIc,QAAQC,OAAQf,SAOxDT,MAAM,YAAoC,IAAD,mBAAhCgE,EAAgC,KAAlBC,EAAkB,KAClCY,EAAWb,EAAatC,KAAKoD,QAAQ,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,SAAS,eAC1E,EAAKzB,SAAS,CACZQ,aAAca,EACdZ,mBAGH7D,OAAO,SAAA8E,GAAG,OAAIA,EAAIC,Y,EAGrBC,eAAiB,WACf,OAAO,EAAKhC,MAAMY,aAAavC,KAAK,SAAEtB,EAAMwB,GAAR,OAClC,cAAC,EAAD,CAAgBxB,KAAOA,GAAawB,O,EAIxC2B,eAAiB,SAAE+B,GACjB,EAAK7B,SAAS,CAAEH,KAAMgC,K,uDAGd,IAAD,OAEP,OACE,sBAAKzG,UAAU,OAAf,UACE,cAAC,EAAD,IACA,uBACA,sBAAKA,UAAU,cAAf,UACE,+BACE,6DAEEG,KAAKkD,MAAM5D,OAAOoD,KAAK,SAAC4B,EAAO1B,GAAR,OACvB,6BACE,cAAC,EAAD,CACEV,GAAKoC,EAAKpC,GACVJ,MAAQwC,EAAK5D,KACb4D,KAAOA,EACPC,eAAiB,EAAKA,kBALhB3B,SAUd,sBAAK/C,UAAU,gBAAf,UAGE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CACEuD,MAAQpD,KAAKqE,MAAMa,gBAGvB,qBAAKrF,UAAU,iBAAf,SAEwB,KAApBG,KAAKqE,MAAMC,KACTtE,KAAKqG,iBACL,+D,GA3FKnG,cAAjB8E,EAEG7E,YAAcjB,EAmGR8F,QCtGTuB,E,uKAIM,IACAjE,EAAWtC,KAAKkD,MAAMsD,MAAMC,OAA5BnE,OACFhD,EAAUgD,EAEdtC,KAAKC,QAAQX,OAAOyG,QAAQ,SAAAW,GAAI,OAAIA,EAAK1D,UAAY2D,SAAUrE,MAD/DtC,KAAKC,QAAQX,OAGf,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CACEA,OAASA,W,GAfAY,aAAbqG,EAEGpG,YAAcjB,EAoBRqH,QC8CAK,G,kNArEbvC,MAAQ,CACNwC,SAAU,GACVC,SAAU,GACVC,SAAS,G,EAGXC,aAAe,SAAAtF,GACb,EAAK+C,SAAS,CACZoC,SAAUnF,EAAEE,OAAOE,S,EAIvBmF,aAAe,SAAAvF,GACb,EAAK+C,SAAS,CACZqC,SAAUpF,EAAEE,OAAOE,S,EAIvBL,SAAW,SAAAC,GACTA,EAAEC,iBACa,EAAKuB,MAAMgE,YAAa,EAAK7C,MAAMwC,SAAU,EAAKxC,MAAMyC,WAErE,EAAKrC,SAAS,CACZsC,SAAS,K,uDAOb,OAAI/G,KAAKkD,MAAMiE,WAEX,cAAC,IAAD,CAAUrH,GAAG,UAKf,sBAAKD,UAAU,eAAf,UACE,8DACA,oKACA,wKACA,qGAEEG,KAAKqE,MAAM0C,SAAW,gEAExB,sBAAMtF,SAAWzB,KAAKyB,SAAtB,SACE,sBAAK5B,UAAU,oBAAf,UACE,uBAAOkC,QAAQ,WAAf,SAA0B,2CAC1B,uBAAOC,KAAK,OAAOC,YAAY,iBAAiBvB,KAAK,WAAW0G,SAAWpH,KAAKgH,aAAe7E,UAAQ,IAEvG,uBAAOJ,QAAQ,WAAf,SAA0B,2CAC1B,uBAAOC,KAAK,WAAWC,YAAY,iBAAiBvB,KAAK,WAAW0G,SAAWpH,KAAKiH,aAAc9E,UAAQ,IAE1G,wBACEH,KAAK,SADP,wBAhBN,KAsBE,uBACA,cAAC,IAAD,CAAMlC,GAAG,gBAAT,SACE,uD,GA/DYI,cCgFPmH,E,4MA/EbhD,MAAQ,CACNwC,SAAU,GACVC,SAAU,GACVQ,eAAgB,GAChBP,SAAS,EACTQ,WAAW,G,EAGbC,iBAAmB,SAAA9F,GACjB,EAAK+C,SAAS,CACZoC,SAAUnF,EAAEE,OAAOE,S,EAIvB2F,iBAAmB,SAAA/F,GACjB,EAAK+C,SAAS,CACZqC,SAAUpF,EAAEE,OAAOE,S,EAIvB4F,uBAAyB,SAAAhG,GACvB,EAAK+C,SAAS,CACZ6C,eAAgB5F,EAAEE,OAAOE,S,EAI7BL,SAAW,SAAAC,GAET,OADAA,EAAEC,iBACE,EAAK0C,MAAMyC,WAAa,EAAKzC,MAAMiD,eAC9B,EAAK7C,SAAS,CACnBsC,QAAS,4BAGG,EAAK7D,MAAMyE,mBAAoB,EAAKtD,MAAMwC,SAAU,EAAKxC,MAAMyC,eAM7E,EAAKrC,SAAS,CACZ8C,WAAW,EACXR,SAAS,IANJ,EAAKtC,SAAS,CACnBsC,QAAS,6B,uDAWb,OACE,sBAAMtF,SAAWzB,KAAKyB,SAAtB,SACE,mCACE,sBAAK5B,UAAU,gBAAf,UACE,0CACA,+EAEEG,KAAKqE,MAAM0C,SAAW,8BAAO/G,KAAKqE,MAAM0C,UAExC/G,KAAKqE,MAAMkD,WAAa,iDAAmB,cAAC,IAAD,CAAMzH,GAAG,IAAT,qCAE7C,uBAAOiC,QAAQ,WAAf,SAA0B,2CAC1B,uBAAOC,KAAK,OAAOC,YAAY,iBAAiBvB,KAAK,WAAWwB,GAAG,WAAWkF,SAAWpH,KAAKwH,iBAAmBrF,UAAQ,IAEzH,uBAAOJ,QAAQ,WAAf,SAA0B,2CAC1B,uBAAOC,KAAK,WAAWC,YAAY,iBAAiBvB,KAAK,WAAWwB,GAAG,WAAWkF,SAAWpH,KAAKyH,iBAAmBtF,UAAQ,IAE7H,uBAAOJ,QAAQ,kBAAf,SAAiC,kDACjC,uBAAOC,KAAK,WAAWC,YAAY,kBAAkBvB,KAAK,kBAAkBwB,GAAG,kBAAkBkF,SAAWpH,KAAK0H,uBAAyBvF,UAAQ,IAGlJ,wBAAQH,KAAK,SAASnC,UAAU,cAAhC,sBACA,cAAC,IAAD,UACE,wBAAQmC,KAAK,SAASnC,UAAU,YAAhC,iC,GAxEaK,aCMrB0H,G,MAAQ,CACZ,CACE1F,GAAI,EACJ2E,SAAU,OACVC,SAAU,WAEZ,CACE5E,GAAI,EACJ2E,SAAU,OACVC,SAAU,aA8JCe,E,4MAzJbxD,MAAQ,CACN/E,OAAQ,GACRD,MAAO,GACP8H,YAAY,EACZS,QACAE,SAAU,I,EAGZC,kBAAoB,WAElB,IAAMC,EAAM5H,EAAOC,aACb4H,EAAQ,UAAOD,EAAP,cACRE,EAAS,UAAOF,EAAP,eAEfxF,QAAQmD,IAAI,CACVhF,MAAOsH,GACPtH,MAAOuH,KAERjH,MAAM,YAA8B,IAAD,mBAA1BgH,EAA0B,KAAhBC,EAAgB,KAClC,OAAKD,EAAS1F,GAGT2F,EAAU3F,GAGRC,QAAQmD,IAAI,CAAEsC,EAAS9G,OAAQ+G,EAAU/G,SAFvC+G,EAAU/G,OAAOF,MAAM,SAAAS,GAAC,OAAIc,QAAQC,OAAQf,MAH5CuG,EAAS9G,OAAOF,MAAM,SAAAS,GAAC,OAAIc,QAAQC,OAAQf,SAOrDT,MAAM,YAA8B,IAAD,mBAA1BgH,EAA0B,KAAhBC,EAAgB,KAClC,EAAKzD,SAAS,CACZpF,MAAO4I,EACP3I,OAAQ4I,OAGX7G,OAAO,SAAA8E,GAAG,OAAIA,EAAIC,Y,EAIrB+B,iBAAmB,SAAA7F,GACjB,IAAM8F,EAAU,EAAK/D,MAAMhF,MAAM0G,QAAQ,SAAAsC,GAAG,OAAIA,EAAInG,KAAOI,KAC3D,EAAKmC,SAAS,CACZpF,MAAO+I,K,EAIXE,cAAgB,SAAEC,GAChB,EAAK9D,SAAS,CACZpF,MAAM,GAAD,mBACA,EAAKgF,MAAMhF,OADX,CAEHkJ,O,EAKNC,iBAAmB,SAAAC,GACjB,IAAMC,EAAY,EAAKrE,MAAM/E,OAAOyG,QAAQ,SAAAsC,GAAG,OAAIA,EAAInG,KAAOuG,KAC9D,EAAKhE,SAAS,CACZnF,OAAQoJ,K,EAIZC,cAAgB,SAAErC,EAAUhE,GAC1B,EAAKmC,SAAS,CACZnF,OAAO,GAAD,mBACD,EAAK+E,MAAM/E,QADV,CAEJ,CAAEgH,WAAUhE,e,EAKlB4E,YAAc,SAAEL,EAAUC,GACxB,IAAM8B,EAAO,EAAKvE,MAAMuD,MAAMiB,MAAM,SAAAnC,GAAI,OAAIA,EAAKG,SAASiC,gBAAkBjC,EAASiC,iBACrF,SAAIF,GAAQA,EAAK9B,WAAaA,KAC5B,EAAKrC,SAAS,CACZ0C,WAAYyB,KAEP,I,EAKXG,cAAgB,WACd,EAAKtE,SAAS,CACZ0C,YAAY,K,EAIhBQ,mBAAqB,SAAEd,EAAUC,GAE/B,GADqB,EAAKzC,MAAMuD,MAAMiB,MAAM,SAAAnC,GAAI,OAAIA,EAAKG,SAASiC,gBAAkBjC,EAASiC,iBAE3F,OAAO,EAET,IAAME,EAAQ,sBACT,EAAK3E,MAAMuD,OADF,CAEZ,CAAEf,WAAUC,cAKd,OAHA,EAAKrC,SAAS,CACZmD,MAAOoB,KAEF,G,uDAGC,IAAD,SAC+BhJ,KAAKqE,MAAnC/E,EADD,EACCA,OAAQD,EADT,EACSA,MAAO8H,EADhB,EACgBA,WAEjBrF,EAAQ,CACZzC,QACAC,SACAC,UAAWS,KAAK2I,cAChBnJ,aAAcQ,KAAKwI,iBACnB7I,UAAWK,KAAK+I,cAChBtJ,UAAWO,KAAKsI,cAChB5I,aAAcM,KAAKmI,kBAGrB,OACE,cAAC,EAAWc,SAAZ,CAAqBnH,MAAQA,EAA7B,SACE,sBAAMjC,UAAU,MAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEqJ,KAAO,CAAE,QAAS,kBAClBC,OAAS,SAAAC,GAAU,OACjBjC,EACI,cAAC,EAAD,aACE7H,OAASA,EACTwI,SAAW,EAAKzD,MAAMyD,UACjBsB,IAEP,cAAC,IAAD,CAAUtJ,GAAG,SAErB,cAAC,IAAD,CACEoJ,KAAK,gBACLC,OAAS,kBACP,cAAC,EAAD,CACExB,mBAAqB,EAAKA,wBAGhC,cAAC,IAAD,CAAOwB,OAAS,kBACd,cAAC,EAAD,CACEjC,YAAc,EAAKA,YACnBC,WAAaA,sB,GA/IfjH,aCflBmJ,IAASF,OAEL,cAAC,EAAD,IAEFG,SAASC,eAAe,W","file":"static/js/main.22fe2711.chunk.js","sourcesContent":["import React from 'react';\n\nconst AppContext = React.createContext({\n  lists: [],\n  cities: [],\n  onAddCity: () => {},\n  onDeleteCity: () => {},\n  onAddList: () => {},\n  onDeleteList: () => {},\n  onSignOut: () => {},\n})\n\nexport default AppContext;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AppContext from '../../AppContext';\nimport './Nav.css';\n\nclass Nav extends Component {\n\n  static contextType = AppContext;\n\n  render() {\n    return (\n      <div className=\"nav\">\n        <Link to='/home'>\n          Home  \n        </Link>\n          <p onClick={ this.context.onSignOut }>Sign Out</p>\n      </div>\n    );\n  }\n\n};\n\nexport default Nav;","const config = {\n  API_ENDPOINT: `https://vast-savannah-34745.herokuapp.com`,\n  API_KEY: process.env.REACT_APP_API_KEY,\n}\n\nexport default config;\n","import React, { Component } from 'react';\nimport AppContext from '../../AppContext';\nimport config from '../../config';\nimport './AddList.css';\n\nclass AddList extends Component {\n\n  static contextType = AppContext;\n\n  addList = name => {\n    fetch( `${ config.API_ENDPOINT }/api/lists`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({ name })\n    })\n    .then( res => res.json())\n    .then( data => {\n      this.context.onAddList( data );\n    })\n    .catch( error => { console.log( error )})\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.addList( e.target.inputList.value );\n  }\n\n  render() {\n    return (\n      <div className=\"addlist\">\n        <form className=\"addlist-form\" onSubmit={ this.onSubmit }>\n          <label htmlFor=\"inputList\"></label>\n          <input type=\"text\" placeholder=\"Enter List Name\" name=\"inputList\" id=\"inputList\" required />\n          <button\n            type=\"submit\" \n          >Add List</button>\n        </form>\n      </div>\n    );\n  };\n};\n\nexport default AddList;","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport AddList from '../AddList/AddList';\nimport config from '../../config';\nimport './Sidebar.css';\nimport AppContext from '../../AppContext';\n\nclass Sidebar extends Component {\n\n  static contextType = AppContext;\n\n  handleDelete = ( listId ) => {\n    fetch( `${ config.API_ENDPOINT }/api/lists/${ listId }`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n      }\n    })\n    .then( res => {\n      if( !res.ok ) {\n        return res.json().then( e => Promise.reject( e ));\n      }\n      return res;\n    })\n    .then( () => {\n      this.context.onDeleteList( listId );\n    })\n    .catch( error => {\n      console.log( error );\n    })\n  }\n\n  render() {\n    \n    return (\n      <div className=\"sidebar\">\n        <h3>Click to display cities or add a custom list.</h3>\n        <ul>\n          { this.context.lists.map( ( list, i ) => \n            <li key={ i }>\n              <NavLink to={ `/lists/${ list.id }` }> \n              { list.name }\n              </NavLink>\n                <button\n                className=\"btn\"\n                type=\"button\"\n                onClick={ () => this.handleDelete( list.id )}\n              >x</button>\n            </li>\n          )}\n        </ul>\n      <AddList />\n      </div>\n    );\n  };\n};\n\nexport default Sidebar;","import React, { Component } from 'react';\nimport AppContext from '../../AppContext';\nimport config from '../../config';\n\nclass AddCity extends Component {\n\n  static contextType = AppContext;\n\n  onSubmit = e => {\n    e.preventDefault();\n    const newCity = {\n      name: e.target.search.value,\n      list_id: e.target.listId.value\n    }\n    fetch( `${ config.API_ENDPOINT }/api/cities`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify( newCity )\n    })\n    .then( res => res.json())\n    .then( data => {\n      this.context.onAddCity( data );\n    })\n    .catch( error => { console.log( error )})\n  }\n\n  render() {\n    return (\n      <div className=\"addcity\">\n        <form className=\"addcity-form\" onSubmit={ this.onSubmit }>\n          <p>Add a City to your List</p>\n          <label htmlFor=\"search\"></label>\n          <input type=\"text\" placeholder=\"Enter City\" name=\"search\" id=\"search\" required />\n  \n          <label htmlFor=\"\"></label>\n          <select id=\"listId\" name=\"listId\">\n            { this.context.lists.map( ( list, i ) => \n              <option\n                key={ i }\n                value={ list.id }\n              >{ list.name }</option> \n            )}\n          </select>\n            <button\n              type=\"submit\"\n            >Add City</button>\n          </form>\n      </div>\n    );\n  };\n};\n\nexport default AddCity;","import React from 'react';\nimport './CurrentWeather.css';\n\nfunction CurrentWeather( props ) {\n\n  const sunset = ( stamp ) => {\n    const timeFormat = new Intl.DateTimeFormat( 'en-US', {\n      timeStyle: 'medium',\n      timeZone: 'PST'\n    });\n    return timeFormat.format( new Date( stamp * 1000 ))\n  }\n\n  return (\n    <div className='current-weather'>\n      <h2>{ props.wData.name }</h2>\n      { props.wData.length !== 0\n          ? <div>\n              <h1>{ Math.round( props.wData.main.temp ) }°F</h1>\n              <p>{ props.wData.weather[0].description }</p>\n              <p> Sunset: { sunset( props.wData.sys.sunset ) }</p>\n            </div>\n          : \"\"\n      }\n    </div>\n  );\n}\n\nexport default CurrentWeather;","import React, { Component } from 'react';\nimport AppContext from '../../AppContext';\nimport config from '../../config';\n\nclass Item extends Component {\n\n  static contextType = AppContext;\n\n  state = {\n    city: \"\",\n  }\n\n  onClick = () => {\n    this.props.getNameOnClick( this.props.city.name );\n  }\n\n  handleDelete = ( id ) => {\n    const itemId = id;\n    fetch( `${ config.API_ENDPOINT }/api/cities/${ itemId }`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n      }\n    })\n    .then( res => {\n      if( !res.ok ) {\n        return res.json().then( e => Promise.reject( e ));\n      }\n      return res;\n    })\n    .then( ( city ) => {\n      this.context.onDeleteCity( itemId );\n      this.setState({\n        city\n      })\n    })\n    .catch( error => {\n      console.log( error );\n    })\n  }\n\n  render() {\n\n    return (\n      <div className=\"item\">\n          <div \n            className=\"city-item\"\n            onClick={ e => this.onClick( e ) }\n            >\n              { this.props.city.name }\n            <button\n              className=\"btn\"\n              type=\"button\"\n              onClick={ () => this.handleDelete( this.props.city.id ) }\n            >x</button>\n          </div>\n      </div>\n    );\n\n  }\n};\n\nexport default Item;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport './WeatherDisplay.css';\n\nclass WeatherDisplay extends Component {\n\n  render() {\n\n    const newDate = new Date();\n    const weekDay = this.props.data.dt * 1000\n    newDate.setTime( weekDay );\n\n    return (\n      <div className='weather-display'>\n        <div className=\"current-weather-display\">\n          { moment( newDate ).format( 'dddd' )}\n        </div>\n        <div className=\"current-weather-description\">\n          { this.props.data.weather[0].description }\n        </div>\n        <h2>{ Math.round( this.props.data.main.temp )}°F</h2>\n      </div>\n    );\n  }\n}\n\nexport default WeatherDisplay;","import React, { Component } from 'react';\nimport AddCity from '../AddCity/AddCity';\nimport CurrentWeather from '../CurrentWeather/CurrentWeather';\nimport Item from '../Item/Item';\nimport WeatherDisplay from '../WeatherDisplay/WeatherDisplay';\nimport './ListPage.css';\nimport config from '../../config';\nimport AppContext from '../../AppContext';\nclass ListPage extends Component {\n\n  static contextType = AppContext;\n\n  state = {\n    forecastData: [],\n    weatherData: [],\n    city: \"\",\n  }\n\n  componentDidUpdate = ( prevProps, prevState ) => {\n    if( prevState.city !== this.state.city ) {\n       this.fetchWeather( this.state.city );\n    }\n  }\n\n  fetchWeather = () => {\n    const city = !undefined ? this.state.city : \"San Bruno\";\n    const baseForecast = `https://api.openweathermap.org/data/2.5/forecast?q=`;\n    const baseWeather = `https://api.openweathermap.org/data/2.5/weather?q=`\n    const api_key = `${ config.API_KEY }`;\n    const imperial = `&units=imperial`\n    const forecastUrl = `${ baseForecast }${ city }&appid=${ api_key }${ imperial }`;\n    const weatherUrl = `${ baseWeather }${ city }&appid=${ api_key }${ imperial }`;\n\n    Promise.all([\n      fetch( forecastUrl ),\n      fetch( weatherUrl )\n    ]) \n    .then( ([ forecastRes, weatherRes ]) => {\n      if( !forecastRes.ok ) {\n        return forecastRes.json().then( e => Promise.reject( e ));\n      }\n      if( !weatherRes.ok ) {\n        return weatherRes.json().then( e => Promise.reject( e ));\n      }\n      return Promise.all([ forecastRes.json(), weatherRes.json() ]);\n    })\n    .then( ([ forecastData, weatherData ]) => {\n      const forecast = forecastData.list.filter( fData => fData.dt_txt.includes(\"18:00:00\") );\n      this.setState({\n        forecastData: forecast,\n        weatherData,\n      })\n    })\n    .catch( err => err.message );\n  }\n\n  formatForecast = () => {\n    return this.state.forecastData.map( ( data, i ) => \n      <WeatherDisplay data={ data } key={ i } /> \n    )\n  }\n\n  getNameOnClick = ( cityName ) => {\n    this.setState({ city: cityName });\n  }\n\n  render() {\n\n    return (\n      <div className=\"list\">\n        <AddCity />\n        <br />\n        <div className=\"list-cities\">\n          <ul>\n            <p>Click a city to view Weather</p>\n\n            { this.props.cities.map( (city , i ) =>\n              <li key={ i }>\n                <Item\n                  id={ city.id }\n                  value={ city.name }\n                  city={ city }\n                  getNameOnClick={ this.getNameOnClick }\n                />\n              </li>\n              )}\n          </ul>\n          <div className=\"list-forecast\">\n\n            {/*  This is Weather Display */}\n            <div className=\"city-name\">\n              <CurrentWeather \n                wData={ this.state.weatherData } \n              />\n            </div>\n            <div className=\"forecast-items\">\n              \n              { this.state.city !== \"\" \n                ? this.formatForecast()\n                : \"Welcome to ShootCast!  Click a city to begin!\" \n              }\n            </div>\n          </div>\n        </div>\n     </div>\n    );\n  }\n};\n\nexport default ListPage;","import React, { Component } from 'react';\nimport Nav from '../Nav/Nav';\nimport Sidebar from '../Sidebar/Sidebar';\nimport ListPage from '../ListPage/ListPage';\nimport AppContext from '../../AppContext';\n\n\nclass Home extends Component {\n\n  static contextType = AppContext;\n\n  render() {\n    const { listId } = this.props.match.params\n    const cities = !listId \n    ? this.context.cities \n    : this.context.cities.filter( item => item.list_id === parseInt( listId ))\n    \n    return (\n      <>\n        <Nav />\n        <Sidebar />\n        <ListPage\n          cities={ cities }\n        />\n      </>\n    );\n  }\n};\n\nexport default Home;","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport './Landing.css';\nclass Landing extends Component {\n\n  state = {\n    username: '',\n    password: '',\n    isError: false\n  }\n  \n  onUserChange = e => {\n    this.setState({\n      username: e.target.value\n    })\n  }\n\n  onPassChange = e => {\n    this.setState({\n      password: e.target.value\n    })\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const result = this.props.handleLogin( this.state.username, this.state.password );\n    if( !result ) {\n      this.setState({\n        isError: true\n      })\n    }\n  }\n\n  render() {\n  \n    if( this.props.authedUser ) {\n      return (\n        <Redirect to='/home' />\n      );\n    };\n\n    return (\n      <div className=\"landing-page\">\n        <h1>Welcome to the ShootCast App</h1>\n        <p>In a world of varying climates and back-to-back creative shoots, a way to keep in the know of current weather situations is a must.</p>\n        <p>ShootCast is an app that will help you do so and create custom lists of cities to see the weather conditions with the click of a mouse.</p>\n        <p>Find out the current weather forecast and plan your shoot correctly.</p>\n\n        { this.state.isError && <div> Username/Password incorrect </div> }\n        \n        <form onSubmit={ this.onSubmit }>\n          <div className=\"landing-container\">\n            <label htmlFor=\"username\"><b>Username</b></label>\n            <input type=\"text\" placeholder=\"Enter Username\" name=\"username\" onChange={ this.onUserChange } required />\n        \n            <label htmlFor=\"password\"><b>Password</b></label>\n            <input type=\"password\" placeholder=\"Enter Password\" name=\"password\" onChange={ this.onPassChange} required />\n        \n            <button \n              type=\"submit\"\n            >Login</button>\n          </div>\n        </form>\n        or\n        <br />\n        <Link to=\"/registration\">\n          <button>Register</button>\n        </Link>\n      </div>\n    );\n    \n  }\n}\n\nexport default Landing;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Registration extends Component {\n\n  state = {\n    username: '',\n    password: '',\n    repeatPassword: '',\n    isError: false,\n    isSuccess: false\n  }\n\n  onUsernameChange = e => {\n    this.setState({\n      username: e.target.value\n    })\n  }\n\n  onPasswordChange = e => {\n    this.setState({\n      password: e.target.value\n    })\n  }\n\n  onRepeatPasswordChange = e => {\n    this.setState({\n      repeatPassword: e.target.value\n    })\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    if( this.state.password !== this.state.repeatPassword ) {\n      return this.setState({\n        isError: \"Passwords do not match!\"\n      })\n    };\n    const result =  this.props.handleRegistration( this.state.username, this.state.password);\n    if( !result ) {\n      return this.setState({\n        isError: 'Username already taken!'\n      })\n    } else {\n      this.setState({\n        isSuccess: true,\n        isError: false\n      })\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={ this.onSubmit }>\n        <fieldset>\n          <div className=\"reg-container\">\n            <h1>Register</h1>\n            <p>Please fill in this form to create an account.</p>\n\n            { this.state.isError && <div>{ this.state.isError }</div> }\n        \n            { this.state.isSuccess && <div>User created! <Link to='/' >Click here to login!</Link></div> }\n\n            <label htmlFor=\"username\"><b>Username</b></label>\n            <input type=\"text\" placeholder=\"Enter Username\" name=\"username\" id=\"username\" onChange={ this.onUsernameChange } required />\n        \n            <label htmlFor=\"password\"><b>Password</b></label>\n            <input type=\"password\" placeholder=\"Enter Password\" name=\"password\" id=\"password\" onChange={ this.onPasswordChange } required />\n        \n            <label htmlFor=\"password-repeat\"><b>Repeat Password</b></label>\n            <input type=\"password\" placeholder=\"Repeat Password\" name=\"password-repeat\" id=\"password-repeat\" onChange={ this.onRepeatPasswordChange } required />\n        \n            \n            <button type=\"submit\" className=\"registerbtn\">Register</button>\n            <Link>\n              <button type=\"button\" className=\"cancelbtn\">Cancel</button>\n            </Link>\n          </div>\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nexport default Registration;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Home from './components/Home/Home';\nimport Landing from './components/Landing/Landing';\nimport Registration from './components/Registration/Registration';\nimport './App.css';\nimport config from './config';\nimport AppContext from './AppContext';\n\nconst users = [\n  { \n    id: 1,\n    username: 'Mike',\n    password: 'pass123'\n  },\n  { \n    id: 2,\n    username: 'test',\n    password: 'pass123'\n  },\n];\nclass App extends Component {\n\n  state = {\n    cities: [],\n    lists: [],\n    authedUser: true,\n    users,\n    response: {},\n  };\n  \n  componentDidMount = () => {\n\n    const url = config.API_ENDPOINT;\n    const listsObj = `${ url }/api/lists`;\n    const citiesObj = `${ url }/api/cities`;\n\n    Promise.all([\n      fetch( listsObj ),\n      fetch( citiesObj )\n    ])\n    .then( ([ listsObj, citiesObj ]) => {\n      if( !listsObj.ok ) {\n        return listsObj.json().then( e => Promise.reject( e ));\n      }\n      if( !citiesObj.ok ) {\n        return citiesObj.json().then( e => Promise.reject( e ));\n      }\n      return Promise.all([ listsObj.json(), citiesObj.json() ]);\n    })\n    .then( ([ listsObj, citiesObj ]) => {\n      this.setState({\n        lists: listsObj, \n        cities: citiesObj\n      })\n    })\n    .catch( err => err.message );\n  }\n\n\n  handleDeleteList = listId => {\n    const newList = this.state.lists.filter( itm => itm.id !== listId );\n    this.setState({\n      lists: newList,\n    })\n  }\n  \n  handleAddList = ( listName ) => {\n    this.setState({\n      lists: [\n        ...this.state.lists,\n        listName\n      ]\n    })\n  }\n  \n  handleDeleteCity = cityId => {\n    const newCities = this.state.cities.filter( itm => itm.id !== cityId );\n    this.setState({\n      cities: newCities,\n    })\n  }\n\n  handleAddCity = ( cityName, listId ) => {\n    this.setState({\n      cities: [\n        ...this.state.cities,\n        { cityName, listId }\n      ],\n    })\n  }\n\n  handleLogin = ( username, password ) => {\n    const user = this.state.users.find( item => item.username.toLowerCase() === username.toLowerCase() );\n    if( user && user.password === password ) {\n      this.setState({\n        authedUser: user,\n      })\n      return true;\n    }\n    return false;\n  }\n\n  handleSignOut = () => {\n    this.setState({\n      authedUser: false,\n    })\n  }\n\n  handleRegistration = ( username, password ) => {\n    const exsitingUser = this.state.users.find( item => item.username.toLowerCase() === username.toLowerCase() );\n    if( exsitingUser ) {\n      return false;\n    };\n    const newUsers = [\n      ...this.state.users,\n      { username, password },\n    ];\n    this.setState({\n      users: newUsers,\n    })\n    return true;\n  }\n  \n  render() {\n    const { cities, lists, authedUser } = this.state;\n\n    const value = {\n      lists,\n      cities,\n      onAddCity: this.handleAddCity,\n      onDeleteCity: this.handleDeleteCity,\n      onSignOut: this.handleSignOut,\n      onAddList: this.handleAddList,\n      onDeleteList: this.handleDeleteList,\n    }\n\n    return (\n      <AppContext.Provider value={ value }>\n        <main className='App'>\n          <div className=\"container\">\n            <BrowserRouter>\n              <Switch>\n                <Route \n                  path={ [ '/home', '/lists/:listId' ] } \n                  render={ routeProps => (\n                    authedUser \n                      ? <Home \n                          cities={ cities }\n                          response={ this.state.response }\n                          { ...routeProps }\n                        />\n                      : <Redirect to='/' />\n                )}/>\n                <Route \n                  path='/registration' \n                  render={ () => (\n                    <Registration\n                      handleRegistration={ this.handleRegistration }\n                    />\n                )}/>\n                <Route render={ () => (\n                  <Landing \n                    handleLogin={ this.handleLogin }\n                    authedUser={ authedUser }\n                  />\n                )}/>\n              </Switch>\n            </BrowserRouter>\n          </div>\n        </main>\n      </AppContext.Provider>\n    );\n  };\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  // <BrowserRouter>\n    <App />,\n  // </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}